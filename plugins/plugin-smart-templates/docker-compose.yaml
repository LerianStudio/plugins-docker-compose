services:
  plugin-smart-templates-mongodb:
    container_name: plugin-smart-templates-mongodb
    image: mongo:latest
    env_file:
      - infra.env
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 5s
      retries: 5
    user: root
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    command: mongod --port ${MONGO_PORT}
    volumes:
      - plugin-smart-templates-mongodb-data:/data/db
    networks:
      - plugin-smart-templates-infra-network

  plugin-smart-templates-rabbitmq:
    image: rabbitmq:4.0-management-alpine
    container_name: plugin-smart-templates-rabbitmq
    restart: always
    env_file:
      - infra.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${RABBITMQ_PORT_HOST}:${RABBITMQ_PORT_HOST}
      - ${RABBITMQ_PORT_AMQP}:${RABBITMQ_PORT_AMQP}
    volumes:
      - ./rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - plugin-smart-templates-infra-network

  plugin-smart-templates-minio:
    image: minio/minio:latest
    container_name: plugin-smart-templates-minio
    env_file:
      - infra.env
    ports:
      - ${MINIO_API_PORT}:${MINIO_API_PORT}
      - ${MINIO_ADMIN_PORT}:${MINIO_ADMIN_PORT}
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_APP_USER: ${MINIO_APP_USER}
      MINIO_APP_PASSWORD: ${MINIO_APP_PASSWORD}
    volumes:
      - plugin-smart-templates-minio-data:/data
    command: server /data --console-address ":${MINIO_ADMIN_PORT:-9001}"
    networks:
      - plugin-smart-templates-infra-network

  plugin-smart-templates-minio-mc:
    image: minio/mc
    container_name: plugin-smart-templates-minio-mc
    env_file:
      - infra.env
    depends_on:
      - plugin-smart-templates-minio
    entrypoint: >
      sh -c "
        sleep 5 && \
        mc alias set local http://plugin-smart-templates-minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD && \
        mc mb local/templates || true && \
        mc mb local/reports || true && \
        mc admin user add local $MINIO_APP_USER $MINIO_APP_PASSWORD && \
        mc admin policy create local app-policy /policies/app-policy.json && \
        mc admin policy attach local app-policy --user $MINIO_APP_USER && \
        echo 'User and buckets created.'
      "
    volumes:
      - ./minio/policies:/policies
    networks:
      - plugin-smart-templates-infra-network

  plugin-smart-templates-keda:
    image: ghcr.io/kedacore/keda:2.16.0
    container_name: plugin-smart-templates-keda
    env_file:
      - infra.env
    environment:
      - KEDA_OPERATOR_LOG_LEVEL=info
      - KEDA_OPERATOR_RABBITMQ_HOST=plugin-smart-templates-rabbitmq
      - KEDA_OPERATOR_RABBITMQ_PORT=${RABBITMQ_PORT_AMQP}
      - KEDA_OPERATOR_RABBITMQ_USERNAME=${RABBITMQ_DEFAULT_USER}
      - KEDA_OPERATOR_RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - KEDA_OPERATOR_RABBITMQ_QUEUE=smart-templates-queue
    ports:
      - "8000:8000"
    depends_on:
      - plugin-smart-templates-rabbitmq
    networks:
      - plugin-smart-templates-infra-network

  plugin-smart-templates-valkey:
    container_name: plugin-smart-templates-valkey
    image: valkey/valkey:latest
    restart: always
    env_file:
      - infra.env
    environment:
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}",  "--port", "${REDIS_PORT}" ]
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - plugin-smart-templates-redis-data:/data
    networks:
      - plugin-smart-templates-infra-network

  plugin-smart-templates-manager:
    container_name: plugin-smart-templates-manager
    restart: always
    image: ghcr.io/lerianstudio/plugin-smart-templates-manager:latest
    env_file:
      - manager.env
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - .:/usr/src/manager
    networks:
      - plugin-smart-templates-infra-network
      - infra-network
      - plugin-fees-network
      - plugin-smart-templates-manager-network
      - plugin-auth-network

  plugin-smart-templates-worker:
    container_name: plugin-smart-templates-worker
    restart: always
    image: ghcr.io/lerianstudio/plugin-smart-templates-worker:latest
    env_file:
      - worker.env
    volumes:
      - .:/usr/src/worker
    networks:
      - plugin-smart-templates-infra-network
      - plugin-fees-network

  plugin-smart-templates-ui:
    container_name: plugin-smart-templates-ui
    image: ghcr.io/lerianstudio/plugin-smart-templates-frontend:latest
    restart: always
    ports:
      - 8083:8083
    env_file:
      - ui.env
    healthcheck:
      test:
        ['CMD', 'curl', '-f', 'http://localhost:8083/api/admin/health/ready']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - console-network
      - infra-network
      - proxy-network

volumes:
  plugin-smart-templates-mongodb-data:
  plugin-smart-templates-minio-data:
  plugin-smart-templates-redis-data:

networks:
  plugin-smart-templates-manager-network:
    name: plugin-smart-templates-manager-network
    driver: bridge
  plugin-smart-templates-infra-network:
    name: plugin-smart-templates-infra-network
    driver: bridge
  console-network:
    name: console-network
    driver: bridge
  plugin-fees-network:
    name: plugin-fees-network
    driver: bridge
  plugin-auth-network:
    name: plugin-auth-network
    driver: bridge
  infra-network:
    name: infra-network
    driver: bridge
  proxy-network:
    name: proxy-network
    external: true